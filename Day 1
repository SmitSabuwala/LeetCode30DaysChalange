Question:- 

Given a non-empty array of integers, every element appears twice except for one. Find that single one.

Note:

Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Example 1:

Input: [2,2,1]
Output: 1
Example 2:

Input: [4,1,2,1,2]
Output: 4


Answer:- 

class Solution {
    public int singleNumber(int[] nums) {
        int result=0;
        int[] numsclone=new int[nums.length];
        int[] count=new int[nums.length];
        for(int i=0;i<nums.length;i++){
            numsclone[i]=nums[i];
        }
        for(int i=0;i<nums.length;i++){
            for(int j=0;j<nums.length;j++){
                if(nums[i]==numsclone[j]){
                    count[i]++;
                }
            }
        }
        
        for(int i=0;i<count.length;i++){
            if(count[i]==1){
                result=nums[i];
            }
        }
        return result;
        
    }
}
